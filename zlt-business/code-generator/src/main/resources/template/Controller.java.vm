package ${package}.${moduleName}.controller;

import java.util.Map;

import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import lombok.extern.slf4j.Slf4j;

import ${package}.${moduleName}.model.${className};
import ${package}.${moduleName}.service.I${className}Service;
import com.central.common.model.PageResult;
import com.central.common.model.Result;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("/${pathName}")
@Tag(name = "${comments}")
@RequiredArgsConstructor
public class ${className}Controller {
    private final I${className}Service ${classname}Service;

    /**
     * 列表
     */
    @Operation(summary = "查询列表")
    @Parameters({
            @Parameter(name = "page",description = "分页起始位置",required = true,in=ParameterIn.QUERY),
            @Parameter(name = "limit",description = "分页结束位置",required = true,in=ParameterIn.QUERY)
    })
    @GetMapping
    public PageResult list(@RequestParam Map<String, Object> params) {
        return ${classname}Service.findList(params);
    }

    /**
     * 查询
     */
    @Operation(summary = "查询")
    @GetMapping("/{${pk.attrname}}")
    public Result findUserById(@PathVariable Long ${pk.attrname}) {
        ${className} model = ${classname}Service.getById(${pk.attrname});
        return Result.succeed(model, "查询成功");
    }

    /**
     * 新增or更新
     */
    @Operation(summary = "保存")
    @PostMapping
    public Result save(@RequestBody ${className} ${classname}) {
        ${classname}Service.saveOrUpdate(${classname});
        return Result.succeed("保存成功");
    }

    /**
     * 删除
     */
    @Operation(summary = "删除")
    @Parameter(name = "id", description = "id", in = ParameterIn.PATH, required = true)
    @DeleteMapping("/{id}")
    public Result delete(@PathVariable Long ${pk.attrname}) {
        ${classname}Service.removeById(${pk.attrname});
        return Result.succeed("删除成功");
    }
}
